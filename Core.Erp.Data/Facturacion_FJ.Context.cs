//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Core.Erp.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Entity_Facturacion_FJ : DbContext
    {
        public Entity_Facturacion_FJ()
            : base("name=Entity_Facturacion_FJ")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<fa_liquidacion_gastos> fa_liquidacion_gastos { get; set; }
        public DbSet<fa_liquidacion_gastos_producto> fa_liquidacion_gastos_producto { get; set; }
        public DbSet<fa_liquidacion_gastos_producto_x_Gastos_x_Proveedor> fa_liquidacion_gastos_producto_x_Gastos_x_Proveedor { get; set; }
        public DbSet<fa_liquidacion_gastos_producto_x_tipo_proceso> fa_liquidacion_gastos_producto_x_tipo_proceso { get; set; }
        public DbSet<fa_liquidaciones> fa_liquidaciones { get; set; }
        public DbSet<fa_liquidaciones_tipo_proceso> fa_liquidaciones_tipo_proceso { get; set; }
        public DbSet<fa_orden_trabajo_plataforma> fa_orden_trabajo_plataforma { get; set; }
        public DbSet<fa_orden_trabajo_plataforma_det> fa_orden_trabajo_plataforma_det { get; set; }
        public DbSet<fa_pre_facturacion> fa_pre_facturacion { get; set; }
        public DbSet<fa_registro_unidades_x_equipo> fa_registro_unidades_x_equipo { get; set; }
        public DbSet<fa_registro_unidades_x_equipo_det> fa_registro_unidades_x_equipo_det { get; set; }
        public DbSet<fa_registro_unidades_x_equipo_det_ini_x_Af> fa_registro_unidades_x_equipo_det_ini_x_Af { get; set; }
        public DbSet<fa_tarifario_facturacion_x_cliente_Af_Depreciacion> fa_tarifario_facturacion_x_cliente_Af_Depreciacion { get; set; }
        public DbSet<fa_tarifario_facturacion_x_cliente_Af_Depreciacion_Det> fa_tarifario_facturacion_x_cliente_Af_Depreciacion_Det { get; set; }
        public DbSet<fa_tarifario_facturacion_x_cliente_det> fa_tarifario_facturacion_x_cliente_det { get; set; }
        public DbSet<fa_tarifario_facturacion_x_cliente_det_x_ActivoFijo> fa_tarifario_facturacion_x_cliente_det_x_ActivoFijo { get; set; }
        public DbSet<fa_tarifario_facturacion_x_cliente_det_x_ActivoFijo_Param_depre> fa_tarifario_facturacion_x_cliente_det_x_ActivoFijo_Param_depre { get; set; }
        public DbSet<fa_tarifario_facturacion_x_cliente_Por_comision> fa_tarifario_facturacion_x_cliente_Por_comision { get; set; }
        public DbSet<vwaf_fa_tarifario_facturacion_x_cliente_Af_Depreciacion_Det> vwaf_fa_tarifario_facturacion_x_cliente_Af_Depreciacion_Det { get; set; }
        public DbSet<vwaf_fa_tarifario_facturacion_x_cliente_det_x_ActivoFijo> vwaf_fa_tarifario_facturacion_x_cliente_det_x_ActivoFijo { get; set; }
        public DbSet<vwfa_cliente_x_ct_centro_costo> vwfa_cliente_x_ct_centro_costo { get; set; }
        public DbSet<vwfa_fa_tarifario_facturacion_x_cliente_det_x_ActivoFijo_Param_depre> vwfa_fa_tarifario_facturacion_x_cliente_det_x_ActivoFijo_Param_depre { get; set; }
        public DbSet<vwfa_liquidacion_gastos> vwfa_liquidacion_gastos { get; set; }
        public DbSet<vwfa_liquidaciones_group_x_liqui_x_periodo_x_cliente> vwfa_liquidaciones_group_x_liqui_x_periodo_x_cliente { get; set; }
        public DbSet<vwfa_orden_trabajo_plataforma> vwfa_orden_trabajo_plataforma { get; set; }
        public DbSet<vwfa_registro_unidades_x_equipo> vwfa_registro_unidades_x_equipo { get; set; }
        public DbSet<vwfa_tarifario_facturacion_x_cliente_det_x_ActivoFijo> vwfa_tarifario_facturacion_x_cliente_det_x_ActivoFijo { get; set; }
        public DbSet<fa_pre_facturacion_det_Activo_fijo> fa_pre_facturacion_det_Activo_fijo { get; set; }
        public DbSet<vwfa_pre_facturacion> vwfa_pre_facturacion { get; set; }
        public DbSet<fa_liquidaciones_det> fa_liquidaciones_det { get; set; }
        public DbSet<vwfa_liquidacion_gastos_det> vwfa_liquidacion_gastos_det { get; set; }
        public DbSet<fa_grupo_x_sub_centro_costo_det> fa_grupo_x_sub_centro_costo_det { get; set; }
        public DbSet<fa_grupo_x_sub_centro_costo> fa_grupo_x_sub_centro_costo { get; set; }
        public DbSet<vwfa_grupo_x_sub_centro_costo> vwfa_grupo_x_sub_centro_costo { get; set; }
        public DbSet<fa_pre_facturacion_det_Cobro_x_Depreciacion> fa_pre_facturacion_det_Cobro_x_Depreciacion { get; set; }
        public DbSet<fa_pre_facturacion_det_cobro_x_Movilizacion> fa_pre_facturacion_det_cobro_x_Movilizacion { get; set; }
        public DbSet<fa_pre_facturacion_det_cobro_x_Poliza> fa_pre_facturacion_det_cobro_x_Poliza { get; set; }
        public DbSet<fa_pre_facturacion_det_egr_x_bod> fa_pre_facturacion_det_egr_x_bod { get; set; }
        public DbSet<fa_pre_facturacion_det_Fact_x_Gastos> fa_pre_facturacion_det_Fact_x_Gastos { get; set; }
        public DbSet<vwfa_pre_facturacion_det_Cobro_x_Depreciacion> vwfa_pre_facturacion_det_Cobro_x_Depreciacion { get; set; }
        public DbSet<vwfa_pre_facturacion_det_cobro_x_Movilizacion> vwfa_pre_facturacion_det_cobro_x_Movilizacion { get; set; }
        public DbSet<vwfa_pre_facturacion_det_cobro_x_Unidades_Consumidas> vwfa_pre_facturacion_det_cobro_x_Unidades_Consumidas { get; set; }
        public DbSet<vwfa_pre_facturacion_det_egr_x_bod> vwfa_pre_facturacion_det_egr_x_bod { get; set; }
        public DbSet<vwfa_pre_facturacion_det_Fact_x_Gastos> vwfa_pre_facturacion_det_Fact_x_Gastos { get; set; }
        public DbSet<fa_pre_facturacion_det_cobro_x_Unidades_Consumidas> fa_pre_facturacion_det_cobro_x_Unidades_Consumidas { get; set; }
        public DbSet<vwfa_grupo_x_sub_centro_costo_det_scc_sin_grupo> vwfa_grupo_x_sub_centro_costo_det_scc_sin_grupo { get; set; }
        public DbSet<vwfa_grupo_x_sub_centro_costo_det> vwfa_grupo_x_sub_centro_costo_det { get; set; }
        public DbSet<fa_liquidacion_gastos_det_Historico> fa_liquidacion_gastos_det_Historico { get; set; }
        public DbSet<vwfa_liquidacion_gastos_det_Historico> vwfa_liquidacion_gastos_det_Historico { get; set; }
        public DbSet<fa_cliente_x_ct_centro_costo> fa_cliente_x_ct_centro_costo { get; set; }
        public DbSet<fa_liquidacion_gastos_det> fa_liquidacion_gastos_det { get; set; }
        public DbSet<fa_pre_facturacion_Parametro> fa_pre_facturacion_Parametro { get; set; }
        public DbSet<vwfa_pre_facturacion_det_cobro_x_Poliza> vwfa_pre_facturacion_det_cobro_x_Poliza { get; set; }
        public DbSet<fa_tarifario_facturacion_x_cliente> fa_tarifario_facturacion_x_cliente { get; set; }
        public DbSet<vwfa_tarifario_facturacion_x_cliente> vwfa_tarifario_facturacion_x_cliente { get; set; }
        public DbSet<vwfa_tarifario_facturacion_x_cliente_det_x_ActivoFijo_x_Tarifario> vwfa_tarifario_facturacion_x_cliente_det_x_ActivoFijo_x_Tarifario { get; set; }
        public DbSet<vwfa_tarifario_facturacion_x_cliente_det_x_ActivoFijo_disponibles> vwfa_tarifario_facturacion_x_cliente_det_x_ActivoFijo_disponibles { get; set; }
    
        public virtual int spFa_Liquidar_Prefacturacion_x_periodo(Nullable<int> idEmpresa, Nullable<int> idPeriodo, Nullable<System.DateTime> fecha_Inicio, Nullable<System.DateTime> fecha_Fin)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idPeriodoParameter = idPeriodo.HasValue ?
                new ObjectParameter("IdPeriodo", idPeriodo) :
                new ObjectParameter("IdPeriodo", typeof(int));
    
            var fecha_InicioParameter = fecha_Inicio.HasValue ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(System.DateTime));
    
            var fecha_FinParameter = fecha_Fin.HasValue ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spFa_Liquidar_Prefacturacion_x_periodo", idEmpresaParameter, idPeriodoParameter, fecha_InicioParameter, fecha_FinParameter);
        }
    
        public virtual ObjectResult<spFa_pre_facturacion_det_egr_x_bod_Result> spFa_pre_facturacion_det_egr_x_bod(Nullable<int> i_IdEmpresa, Nullable<decimal> i_IdPrefacturacion)
        {
            var i_IdEmpresaParameter = i_IdEmpresa.HasValue ?
                new ObjectParameter("i_IdEmpresa", i_IdEmpresa) :
                new ObjectParameter("i_IdEmpresa", typeof(int));
    
            var i_IdPrefacturacionParameter = i_IdPrefacturacion.HasValue ?
                new ObjectParameter("i_IdPrefacturacion", i_IdPrefacturacion) :
                new ObjectParameter("i_IdPrefacturacion", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spFa_pre_facturacion_det_egr_x_bod_Result>("spFa_pre_facturacion_det_egr_x_bod", i_IdEmpresaParameter, i_IdPrefacturacionParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> spFa_Pre_facturar_x_periodo(Nullable<int> i_IdEmpresa, Nullable<decimal> i_IdPrefacturacion, Nullable<int> i_IdPeriodo, string i_IdEstado_Proceso, Nullable<System.DateTime> i_fecha, string i_Observacion)
        {
            var i_IdEmpresaParameter = i_IdEmpresa.HasValue ?
                new ObjectParameter("i_IdEmpresa", i_IdEmpresa) :
                new ObjectParameter("i_IdEmpresa", typeof(int));
    
            var i_IdPrefacturacionParameter = i_IdPrefacturacion.HasValue ?
                new ObjectParameter("i_IdPrefacturacion", i_IdPrefacturacion) :
                new ObjectParameter("i_IdPrefacturacion", typeof(decimal));
    
            var i_IdPeriodoParameter = i_IdPeriodo.HasValue ?
                new ObjectParameter("i_IdPeriodo", i_IdPeriodo) :
                new ObjectParameter("i_IdPeriodo", typeof(int));
    
            var i_IdEstado_ProcesoParameter = i_IdEstado_Proceso != null ?
                new ObjectParameter("i_IdEstado_Proceso", i_IdEstado_Proceso) :
                new ObjectParameter("i_IdEstado_Proceso", typeof(string));
    
            var i_fechaParameter = i_fecha.HasValue ?
                new ObjectParameter("i_fecha", i_fecha) :
                new ObjectParameter("i_fecha", typeof(System.DateTime));
    
            var i_ObservacionParameter = i_Observacion != null ?
                new ObjectParameter("i_Observacion", i_Observacion) :
                new ObjectParameter("i_Observacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spFa_Pre_facturar_x_periodo", i_IdEmpresaParameter, i_IdPrefacturacionParameter, i_IdPeriodoParameter, i_IdEstado_ProcesoParameter, i_fechaParameter, i_ObservacionParameter);
        }
    }
}
